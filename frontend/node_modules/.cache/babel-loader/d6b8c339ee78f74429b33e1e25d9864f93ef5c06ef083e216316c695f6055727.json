{"ast":null,"code":"var _jsxFileName = \"C:\\\\M6\\\\S1\\\\user-CRUD-fullstack\\\\crud-fullstack\\\\src\\\\pages\\\\login\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport * as yup from 'yup';\nimport { Link } from \"react-router-dom\";\nimport { AiFillEye } from 'react-icons/ai';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../context/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formSchema = yup.object().shape({\n  email: yup.string().required('E-mail obrigatório'),\n  password: yup.string().required('Senha obrigatória')\n});\nexport const Login = () => {\n  _s();\n  const {\n    userLogin\n  } = useContext(UserContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(formSchema)\n  });\n  const submit = data => {\n    userLogin(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Digite seu E-mail\",\n        ...register('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Senha\",\n        ...register('email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiFillEye, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn1\",\n        type: \"submit\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Ainda n\\xE3o possui uma conta?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/register',\n        children: \"Cadastre-se\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"t/mO8XoHCQn0dww2z8I3nZ1G4J4=\", false, function () {\n  return [useForm];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["yup","Link","AiFillEye","useForm","yupResolver","useContext","UserContext","jsxDEV","_jsxDEV","formSchema","object","shape","email","string","required","password","Login","_s","userLogin","register","handleSubmit","resolver","submit","data","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","placeholder","className","to","_c","$RefreshReg$"],"sources":["C:/M6/S1/user-CRUD-fullstack/crud-fullstack/src/pages/login/index.tsx"],"sourcesContent":["import * as yup from 'yup'\r\nimport { Link } from \"react-router-dom\"\r\nimport { AiFillEye } from 'react-icons/ai';\r\nimport { useForm } from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../context/userContext\";\r\n\r\ninterface iDataLogin {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst formSchema = yup.object().shape({\r\n    email: yup.string().required('E-mail obrigatório'),\r\n    password: yup.string().required('Senha obrigatória')\r\n})\r\n\r\nexport const Login = () => {\r\n\r\n    const { userLogin } = useContext(UserContext)\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n      } = useForm<iDataLogin>({\r\n        resolver: yupResolver(formSchema),\r\n      })\r\n\r\n    const submit = (data: iDataLogin) => {\r\n        userLogin(data)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <form >\r\n            <h3>Login</h3>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" placeholder=\"Digite seu E-mail\"{...register('email')}/>\r\n                <label htmlFor=\"password\">Senha</label>\r\n                <input type=\"password\" id=\"password\" placeholder=\"Senha\"{...register('email')}/>\r\n                <AiFillEye/>\r\n                <button className='btn1' type=\"submit\">Entrar</button>\r\n                <span>Ainda não possui uma conta?</span>\r\n                <Link to={'/register'} >Cadastre-se</Link>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
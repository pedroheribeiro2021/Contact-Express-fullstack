{"ast":null,"code":"var _jsxFileName = \"C:\\\\M6\\\\S1\\\\user-CRUD-fullstack\\\\frontend\\\\src\\\\context\\\\userContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { api } from \"../services/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [currentRoute, setCurrentRoute] = useState(null);\n  const history = useHistory();\n  const userLogin = data => {\n    api.post(`/login `, data).then(resp => {\n      console.log(resp.data.user);\n      setUser(resp.data.user);\n      localStorage.setItem('@token', resp.data.token);\n      console.log(resp.data);\n      // localStorage.setItem('@id', resp.data.user.id)\n      history.push('/dashboard');\n      // toast.success('Login efetuado com sucesso!', {\n      //     position: \"top-right\",\n      //     autoClose: 2000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      // })\n    }).catch(err => {\n      console.log(err);\n      // toast.error('Erro de credenciais!', {\n      //     position: \"top-right\",\n      //     autoClose: 2000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      //     })\n    });\n  };\n\n  const userRegister = async data => {\n    await api.post(`/user`, data).then(resp => {\n      console.log(resp);\n      // toast.success('Cadastro efetuado com sucesso!', {\n      //     position: \"top-right\",\n      //     autoClose: 2000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      // })\n      history.push('/');\n    }).catch(err => {\n      // const requestError = err as AxiosError<iApiError>\n      console.log(err);\n      // toast.error(requestError.response?.data.message, {\n      //     position: \"top-right\",\n      //     autoClose: 2000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      //     })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userLogin,\n      userRegister,\n      user,\n      setCurrentRoute\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"nxtcE0h4jiQaDH/+MwsfJMWNnW0=\", false, function () {\n  return [useHistory];\n});\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","useHistory","jsxDEV","_jsxDEV","UserContext","UserProvider","_ref","_s","children","user","setUser","currentRoute","setCurrentRoute","history","userLogin","data","post","then","resp","console","log","localStorage","setItem","token","push","catch","err","userRegister","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["C:/M6/S1/user-CRUD-fullstack/frontend/src/context/userContext.tsx"],"sourcesContent":["import { AxiosError } from \"axios\";\r\nimport { createContext, ReactNode, SetStateAction, useContext, useState } from \"react\";\r\nimport { api } from \"../services/api\";\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\ninterface iApiError {\r\n    message: string;\r\n}\r\n\r\ninterface iUserProps {\r\n    children: ReactNode;\r\n}\r\n\r\ninterface iDataLogin {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ninterface iDataRegister {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    phone: string;\r\n}\r\n\r\ninterface iUser {\r\n    id: string;\r\n\tname: string;\r\n\temail: string;\r\n\tcontact: string;\r\n}\r\n\r\nexport interface iUserContext {\r\n    user: iUser | null;\r\n    setCurrentRoute: React.Dispatch<SetStateAction<string | null>>;\r\n    userLogin: (data: iDataLogin) => void;\r\n    userRegister: (data: iDataRegister) => void;\r\n}\r\n\r\nexport const UserContext = createContext<iUserContext>({} as iUserContext)\r\n\r\nexport const UserProvider = ({children}: iUserProps) => {\r\n\r\n    const [user, setUser] = useState<iUser | null>(null)\r\n    const [currentRoute, setCurrentRoute] = useState<string | null>(null)\r\n\r\n    const history = useHistory()\r\n\r\n    const userLogin = (data: iDataLogin) => {\r\n\r\n        api.post(`/login `, data)\r\n        .then((resp) => {\r\n            console.log(resp.data.user)\r\n            setUser(resp.data.user)\r\n            localStorage.setItem('@token', resp.data.token)\r\n            console.log(resp.data)\r\n            // localStorage.setItem('@id', resp.data.user.id)\r\n            history.push('/dashboard')\r\n            // toast.success('Login efetuado com sucesso!', {\r\n            //     position: \"top-right\",\r\n            //     autoClose: 2000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            // })\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n            // toast.error('Erro de credenciais!', {\r\n            //     position: \"top-right\",\r\n            //     autoClose: 2000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            //     })\r\n        })\r\n    }\r\n\r\n    const userRegister = async(data: iDataRegister) => {\r\n\r\n        await api.post(`/user`, data)\r\n        .then((resp) => {\r\n            console.log(resp)\r\n            // toast.success('Cadastro efetuado com sucesso!', {\r\n            //     position: \"top-right\",\r\n            //     autoClose: 2000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            // })\r\n            history.push('/')\r\n        })\r\n        .catch((err) => {\r\n            // const requestError = err as AxiosError<iApiError>\r\n            console.log(err)\r\n            // toast.error(requestError.response?.data.message, {\r\n            //     position: \"top-right\",\r\n            //     autoClose: 2000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            //     })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n        userLogin,\r\n        userRegister, \r\n        user,\r\n        setCurrentRoute\r\n        }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useUserContext = () => useContext(UserContext)"],"mappings":";;;AACA,SAASA,aAAa,EAA6BC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACtF,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAoC7C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAe,CAAC,CAAC,CAAiB;AAE1E,OAAO,MAAMQ,YAAY,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAACC;EAAoB,CAAC,GAAAF,IAAA;EAE/C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAe,IAAI,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAErE,MAAMc,OAAO,GAAGZ,UAAU,EAAE;EAE5B,MAAMa,SAAS,GAAIC,IAAgB,IAAK;IAEpCf,GAAG,CAACgB,IAAI,CAAE,SAAQ,EAAED,IAAI,CAAC,CACxBE,IAAI,CAAEC,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACH,IAAI,CAACN,IAAI,CAAC;MAC3BC,OAAO,CAACQ,IAAI,CAACH,IAAI,CAACN,IAAI,CAAC;MACvBY,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACH,IAAI,CAACQ,KAAK,CAAC;MAC/CJ,OAAO,CAACC,GAAG,CAACF,IAAI,CAACH,IAAI,CAAC;MACtB;MACAF,OAAO,CAACW,IAAI,CAAC,YAAY,CAAC;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC;EACN,CAAC;;EAED,MAAMC,YAAY,GAAG,MAAMZ,IAAmB,IAAK;IAE/C,MAAMf,GAAG,CAACgB,IAAI,CAAE,OAAM,EAAED,IAAI,CAAC,CAC5BE,IAAI,CAAEC,IAAI,IAAK;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAL,OAAO,CAACW,IAAI,CAAC,GAAG,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZ;MACAP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC;EACN,CAAC;;EAED,oBACIvB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC7Bf,SAAS;MACTa,YAAY;MACZlB,IAAI;MACJG;IACA,CAAE;IAAAJ,QAAA,EACGA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE/B,CAAC;AAAA1B,EAAA,CAlFYF,YAAY;EAAA,QAKLJ,UAAU;AAAA;AAAAiC,EAAA,GALjB7B,YAAY;AAoFzB,OAAO,MAAM8B,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMtC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAAgC,GAAA,CAA9CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
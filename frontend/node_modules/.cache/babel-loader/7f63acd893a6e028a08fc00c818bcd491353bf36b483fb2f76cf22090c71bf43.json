{"ast":null,"code":"var _jsxFileName = \"C:\\\\M6\\\\S1\\\\user-CRUD-fullstack\\\\frontend\\\\src\\\\context\\\\contactContext.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { createContext } from 'react';\n// import { toast } from 'react-toastify';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// interface iTechs {\n//     id: string;\n//     title: string;\n//     status: string;\n//     created_at: string;\n//     updated_at: string;\n//     user: {\n//         id: string\n//     }\n// }\n\n// interface iUser {\n//     id: string,\n// \tname: string,\n// \temail: string,\n// \tcourse_module: string,\n// \tbio: string,\n// \tcontact: string,\n// \ttechs: [],\n// \tworks: [],\n// }\n\n// interface iUpdate {\n//     status: string;\n// }\n\nexport const ContactContext = /*#__PURE__*/createContext({});\nexport const ContactProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  // const [loading, setLoading] = useState(false)\n  // const [techs, setTechs] = useState /* <iTechs[]> */ ([] as iTechs[])\n  // const [user, setUser] = useState<iUser | null>(null)\n\n  // useEffect(() => {\n\n  //     const getUser = async () => {\n\n  //         const id = localStorage.getItem('@id')\n\n  //         try {\n  //             setLoading(true)\n  //              const response = await api.get(`/users/${id}`)\n  //             .then((resp) => {\n  //                 setUser(resp.data)\n  //                 setTechs(resp.data.techs)\n  //                 // console.log(user)\n  //             })\n  //             return response\n  //         } catch (error) {\n  //             console.log(error)\n  //         }\n  //         finally {\n  //             setLoading(false)  \n  //         }\n  //     }\n  //     getUser()\n  // }, [techs])\n\n  const contactRegister = data => {\n    const token = localStorage.getItem('@token');\n    try {\n      api.post(`/contact`, data, {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      }).then(resp => {\n        console.log(data);\n        // setTechs(resp.data)\n        // const newData = [...techs,{\n        //     id: resp.data.id,\n        //     title: resp.data.title,\n        //     status: resp.data.status,\n        //     created_at: resp.data.created_at,\n        //     updated_at: resp.data.update_at,\n        //     user: {\n        //         id: resp.data.user.id,\n        //     }\n        // }]\n        // setTechs(newData)\n      });\n    } catch (error) {\n      // const requestError = error as AxiosError<iApiError>\n      console.log(error);\n      // toast.error(requestError.response?.data.message, {\n      //     position: \"top-right\",\n      //     autoClose: 2000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      // })\n    }\n  };\n\n  // const updateTechs = async (id: string, data: iUpdate) => {\n\n  //     const token = localStorage.getItem('@token')\n\n  //     try {\n  //         await api.put(`/users/techs/${id}`, data, {\n  //             headers: {Authorization:'Bearer ' + token}\n  //         })\n  //         .then((resp) => console.log(resp))\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // }\n\n  // const removeTechs = async (id: string) => {\n  //     const techDelete = techs.filter(tech => tech.id !== id)\n\n  //     const token = localStorage.getItem('@token')\n\n  //     await api.delete(`/users/techs/${id}`, {\n  //         headers: {Authorization:'Bearer ' + token}\n  //     })\n  // }\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      // user,\n      // setUser, \n      // techs,\n      contactRegister\n      // updateTechs,\n      // getUser,\n      // removeTechs\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_c = ContactProvider;\nexport const useContactContext = () => {\n  _s();\n  return useContext(ContactContext);\n};\n_s(useContactContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ContactProvider\");","map":{"version":3,"names":["useContext","createContext","api","jsxDEV","_jsxDEV","ContactContext","ContactProvider","_ref","children","contactRegister","data","token","localStorage","getItem","post","headers","Authorization","then","resp","console","log","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useContactContext","_s","$RefreshReg$"],"sources":["C:/M6/S1/user-CRUD-fullstack/frontend/src/context/contactContext.tsx"],"sourcesContent":["import { AxiosError } from 'axios';\r\nimport { ReactNode, useContext, useEffect, useState } from 'react'\r\nimport { createContext } from 'react'\r\n// import { toast } from 'react-toastify';\r\nimport { api } from '../services/api'\r\n\r\ninterface iApiError {\r\n    message: string;\r\n}\r\n\r\ninterface iContactProps {\r\n    children: ReactNode;\r\n}\r\n\r\ninterface iDataTech {\r\n    title: string;\r\n    status: string;\r\n}\r\n\r\ninterface iContactContext {\r\n    // user: iUser | null;\r\n    // setUser: React.Dispatch<React.SetStateAction<iUser | null>>;\r\n    // techs: iTechs[];\r\n    contactRegister: (data: iDataTech) => void;\r\n    // updateTechs: (id: string, data: iUpdate) => void;\r\n    // getUser: () => void;\r\n    // removeTechs: (id: string) => void;\r\n}\r\n\r\n// interface iTechs {\r\n//     id: string;\r\n//     title: string;\r\n//     status: string;\r\n//     created_at: string;\r\n//     updated_at: string;\r\n//     user: {\r\n//         id: string\r\n//     }\r\n// }\r\n\r\n// interface iUser {\r\n//     id: string,\r\n// \tname: string,\r\n// \temail: string,\r\n// \tcourse_module: string,\r\n// \tbio: string,\r\n// \tcontact: string,\r\n// \ttechs: [],\r\n// \tworks: [],\r\n// }\r\n\r\n// interface iUpdate {\r\n//     status: string;\r\n// }\r\n\r\n\r\nexport const ContactContext = createContext<iContactContext>({} as iContactContext)\r\n\r\nexport const ContactProvider = ({children}: iContactProps) => {\r\n\r\n    // const [loading, setLoading] = useState(false)\r\n    // const [techs, setTechs] = useState /* <iTechs[]> */ ([] as iTechs[])\r\n    // const [user, setUser] = useState<iUser | null>(null)\r\n    \r\n    // useEffect(() => {\r\n\r\n    //     const getUser = async () => {\r\n\r\n    //         const id = localStorage.getItem('@id')\r\n\r\n    //         try {\r\n    //             setLoading(true)\r\n    //              const response = await api.get(`/users/${id}`)\r\n    //             .then((resp) => {\r\n    //                 setUser(resp.data)\r\n    //                 setTechs(resp.data.techs)\r\n    //                 // console.log(user)\r\n    //             })\r\n    //             return response\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //         finally {\r\n    //             setLoading(false)  \r\n    //         }\r\n    //     }\r\n    //     getUser()\r\n    // }, [techs])\r\n\r\n    const contactRegister = (data: iDataTech) => {\r\n\r\n        const token = localStorage.getItem('@token')\r\n\r\n        try {\r\n           api.post(`/contact`, data, {\r\n            headers: {Authorization:'Bearer ' + token}\r\n           })\r\n           .then((resp) => {\r\n            console.log(data)\r\n            // setTechs(resp.data)\r\n            // const newData = [...techs,{\r\n            //     id: resp.data.id,\r\n            //     title: resp.data.title,\r\n            //     status: resp.data.status,\r\n            //     created_at: resp.data.created_at,\r\n            //     updated_at: resp.data.update_at,\r\n            //     user: {\r\n            //         id: resp.data.user.id,\r\n            //     }\r\n            // }]\r\n            // setTechs(newData)\r\n        })\r\n        } catch (error) {\r\n            // const requestError = error as AxiosError<iApiError>\r\n            console.log(error)\r\n            // toast.error(requestError.response?.data.message, {\r\n            //     position: \"top-right\",\r\n            //     autoClose: 2000,\r\n            //     hideProgressBar: false,\r\n            //     closeOnClick: true,\r\n            //     pauseOnHover: true,\r\n            //     draggable: true,\r\n            //     progress: undefined,\r\n            // })\r\n        }\r\n    }\r\n\r\n    // const updateTechs = async (id: string, data: iUpdate) => {\r\n\r\n    //     const token = localStorage.getItem('@token')\r\n\r\n    //     try {\r\n    //         await api.put(`/users/techs/${id}`, data, {\r\n    //             headers: {Authorization:'Bearer ' + token}\r\n    //         })\r\n    //         .then((resp) => console.log(resp))\r\n    //     } catch (error) {\r\n    //         console.log(error)\r\n    //     }\r\n    // }\r\n\r\n    // const removeTechs = async (id: string) => {\r\n    //     const techDelete = techs.filter(tech => tech.id !== id)\r\n\r\n    //     const token = localStorage.getItem('@token')\r\n\r\n    //     await api.delete(`/users/techs/${id}`, {\r\n    //         headers: {Authorization:'Bearer ' + token}\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <ContactContext.Provider value={{\r\n            // user,\r\n            // setUser, \r\n            // techs,\r\n            contactRegister\r\n            // updateTechs,\r\n            // getUser,\r\n            // removeTechs\r\n            }}>\r\n                {children}\r\n        </ContactContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport const useContactContext = () => useContext(ContactContext)"],"mappings":";;AACA,SAAoBA,UAAU,QAA6B,OAAO;AAClE,SAASC,aAAa,QAAQ,OAAO;AACrC;AACA,SAASC,GAAG,QAAQ,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAyBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,CAAkB,CAAC,CAAC,CAAoB;AAEnF,OAAO,MAAMK,eAAe,GAAGC,IAAA,IAA+B;EAAA,IAA9B;IAACC;EAAuB,CAAC,GAAAD,IAAA;EAErD;EACA;EACA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAME,eAAe,GAAIC,IAAe,IAAK;IAEzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE5C,IAAI;MACDX,GAAG,CAACY,IAAI,CAAE,UAAS,EAAEJ,IAAI,EAAE;QAC1BK,OAAO,EAAE;UAACC,aAAa,EAAC,SAAS,GAAGL;QAAK;MAC1C,CAAC,CAAC,CACDM,IAAI,CAAEC,IAAI,IAAK;QACfC,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;QACjB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,CAAC,CAAC;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZ;MACAF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;MAClB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ,CAAC;;EAED;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA,oBACIjB,OAAA,CAACC,cAAc,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAC5B;MACA;MACA;MACAd;MACA;MACA;MACA;IACA,CAAE;IAAAD,QAAA,EACGA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACS;AAGlC,CAAC;AAAAC,EAAA,GA3GYtB,eAAe;AA6G5B,OAAO,MAAMuB,iBAAiB,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAM9B,UAAU,CAACK,cAAc,CAAC;AAAA;AAAAyB,EAAA,CAApDD,iBAAiB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
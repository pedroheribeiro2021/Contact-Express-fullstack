{"ast":null,"code":"var _jsxFileName = \"C:\\\\M6\\\\S1\\\\user-CRUD-fullstack\\\\crud-fullstack\\\\src\\\\context\\\\userContext.tsx\";\nimport { createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const userRegister = async data => {\n\n    // await api.post(`/users`, data)\n    // .then((resp) => {\n    //     console.log(resp)\n    //     toast.success('Cadastro efetuado com sucesso!', {\n    //         position: \"top-right\",\n    //         autoClose: 2000,\n    //         hideProgressBar: false,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //         progress: undefined,\n    //     })\n    //     navigate('/')\n    // })\n    // .catch((err) => {\n    //     const requestError = err as AxiosError<iApiError>\n    //     console.log(err)\n    //     toast.error(requestError.response?.data.message, {\n    //         position: \"top-right\",\n    //         autoClose: 2000,\n    //         hideProgressBar: false,\n    //         closeOnClick: true,\n    //         pauseOnHover: true,\n    //         draggable: true,\n    //         progress: undefined,\n    //         })\n    // })\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      // userLogin,\n      userRegister\n      // user,\n      // setCurrentRoute\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n// export const useUserContext = () => useContext(UserContext)\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","jsxDEV","_jsxDEV","UserContext","UserProvider","_ref","children","userRegister","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/M6/S1/user-CRUD-fullstack/crud-fullstack/src/context/userContext.tsx"],"sourcesContent":["import { createContext, ReactNode } from \"react\";\r\n\r\ninterface iUserProps {\r\n    children: ReactNode;\r\n}\r\n\r\ninterface iDataRegister {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n    contact: string;\r\n}\r\n\r\nexport interface iUserContext {\r\n    // user: iUser | null;\r\n    // setCurrentRoute: React.Dispatch<SetStateAction<string | null>>;\r\n    // userLogin: (data: iDataLogin) => void;\r\n    userRegister: (data: iDataRegister) => void;\r\n}\r\n\r\nexport const UserContext = createContext<iUserContext>({} as iUserContext)\r\n\r\nexport const UserProvider = ({children}: iUserProps) => {\r\n\r\n    const userRegister = async(data: iDataRegister) => {\r\n\r\n        // await api.post(`/users`, data)\r\n        // .then((resp) => {\r\n        //     console.log(resp)\r\n        //     toast.success('Cadastro efetuado com sucesso!', {\r\n        //         position: \"top-right\",\r\n        //         autoClose: 2000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //     })\r\n        //     navigate('/')\r\n        // })\r\n        // .catch((err) => {\r\n        //     const requestError = err as AxiosError<iApiError>\r\n        //     console.log(err)\r\n        //     toast.error(requestError.response?.data.message, {\r\n        //         position: \"top-right\",\r\n        //         autoClose: 2000,\r\n        //         hideProgressBar: false,\r\n        //         closeOnClick: true,\r\n        //         pauseOnHover: true,\r\n        //         draggable: true,\r\n        //         progress: undefined,\r\n        //         })\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={{\r\n        // userLogin,\r\n        userRegister, \r\n        // user,\r\n        // setCurrentRoute\r\n        }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\n// export const useUserContext = () => useContext(UserContext)"],"mappings":";AAAA,SAASA,aAAa,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAoBjD,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAe,CAAC,CAAC,CAAiB;AAE1E,OAAO,MAAMI,YAAY,GAAGC,IAAA,IAA4B;EAAA,IAA3B;IAACC;EAAoB,CAAC,GAAAD,IAAA;EAE/C,MAAME,YAAY,GAAG,MAAMC,IAAmB,IAAK;;IAE/C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACH;EAED,oBACIN,OAAA,CAACC,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAE;MAC7B;MACAH;MACA;MACA;IACA,CAAE;IAAAD,QAAA,EACGA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACU;AAE/B,CAAC;;AAED;AAAAC,EAAA,GA7CaX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}